// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: games.proto

public final class Gameprotocol {
  private Gameprotocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GameInfoRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     */
    int getId();
  }
  /**
   * Protobuf type {@code GameInfoRequest}
   */
  public static final class GameInfoRequest extends
      com.google.protobuf.GeneratedMessage
      implements GameInfoRequestOrBuilder {
    // Use GameInfoRequest.newBuilder() to construct.
    private GameInfoRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameInfoRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameInfoRequest defaultInstance;
    public static GameInfoRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GameInfoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Gameprotocol.internal_static_GameInfoRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Gameprotocol.internal_static_GameInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Gameprotocol.GameInfoRequest.class, Gameprotocol.GameInfoRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GameInfoRequest> PARSER =
        new com.google.protobuf.AbstractParser<GameInfoRequest>() {
      public GameInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameInfoRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameInfoRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Gameprotocol.GameInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.GameInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.GameInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.GameInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.GameInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.GameInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Gameprotocol.GameInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Gameprotocol.GameInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Gameprotocol.GameInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.GameInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Gameprotocol.GameInfoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Gameprotocol.GameInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Gameprotocol.internal_static_GameInfoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Gameprotocol.internal_static_GameInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Gameprotocol.GameInfoRequest.class, Gameprotocol.GameInfoRequest.Builder.class);
      }

      // Construct using Gameprotocol.GameInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Gameprotocol.internal_static_GameInfoRequest_descriptor;
      }

      public Gameprotocol.GameInfoRequest getDefaultInstanceForType() {
        return Gameprotocol.GameInfoRequest.getDefaultInstance();
      }

      public Gameprotocol.GameInfoRequest build() {
        Gameprotocol.GameInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Gameprotocol.GameInfoRequest buildPartial() {
        Gameprotocol.GameInfoRequest result = new Gameprotocol.GameInfoRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Gameprotocol.GameInfoRequest) {
          return mergeFrom((Gameprotocol.GameInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Gameprotocol.GameInfoRequest other) {
        if (other == Gameprotocol.GameInfoRequest.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Gameprotocol.GameInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Gameprotocol.GameInfoRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameInfoRequest)
    }

    static {
      defaultInstance = new GameInfoRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameInfoRequest)
  }

  public interface GameInfoResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     */
    int getId();

    // repeated int32 players = 2;
    /**
     * <code>repeated int32 players = 2;</code>
     */
    java.util.List<java.lang.Integer> getPlayersList();
    /**
     * <code>repeated int32 players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated int32 players = 2;</code>
     */
    int getPlayers(int index);

    // repeated int32 board = 3;
    /**
     * <code>repeated int32 board = 3;</code>
     */
    java.util.List<java.lang.Integer> getBoardList();
    /**
     * <code>repeated int32 board = 3;</code>
     */
    int getBoardCount();
    /**
     * <code>repeated int32 board = 3;</code>
     */
    int getBoard(int index);
  }
  /**
   * Protobuf type {@code GameInfoResponse}
   */
  public static final class GameInfoResponse extends
      com.google.protobuf.GeneratedMessage
      implements GameInfoResponseOrBuilder {
    // Use GameInfoResponse.newBuilder() to construct.
    private GameInfoResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameInfoResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameInfoResponse defaultInstance;
    public static GameInfoResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GameInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                players_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                players_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                board_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              board_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                board_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                board_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          board_ = java.util.Collections.unmodifiableList(board_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Gameprotocol.internal_static_GameInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Gameprotocol.internal_static_GameInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Gameprotocol.GameInfoResponse.class, Gameprotocol.GameInfoResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GameInfoResponse> PARSER =
        new com.google.protobuf.AbstractParser<GameInfoResponse>() {
      public GameInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameInfoResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameInfoResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // repeated int32 players = 2;
    public static final int PLAYERS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> players_;
    /**
     * <code>repeated int32 players = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated int32 players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated int32 players = 2;</code>
     */
    public int getPlayers(int index) {
      return players_.get(index);
    }

    // repeated int32 board = 3;
    public static final int BOARD_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> board_;
    /**
     * <code>repeated int32 board = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getBoardList() {
      return board_;
    }
    /**
     * <code>repeated int32 board = 3;</code>
     */
    public int getBoardCount() {
      return board_.size();
    }
    /**
     * <code>repeated int32 board = 3;</code>
     */
    public int getBoard(int index) {
      return board_.get(index);
    }

    private void initFields() {
      id_ = 0;
      players_ = java.util.Collections.emptyList();
      board_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeInt32(2, players_.get(i));
      }
      for (int i = 0; i < board_.size(); i++) {
        output.writeInt32(3, board_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < players_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(players_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayersList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < board_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(board_.get(i));
        }
        size += dataSize;
        size += 1 * getBoardList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Gameprotocol.GameInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.GameInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.GameInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.GameInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.GameInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.GameInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Gameprotocol.GameInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Gameprotocol.GameInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Gameprotocol.GameInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.GameInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Gameprotocol.GameInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Gameprotocol.GameInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Gameprotocol.internal_static_GameInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Gameprotocol.internal_static_GameInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Gameprotocol.GameInfoResponse.class, Gameprotocol.GameInfoResponse.Builder.class);
      }

      // Construct using Gameprotocol.GameInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        board_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Gameprotocol.internal_static_GameInfoResponse_descriptor;
      }

      public Gameprotocol.GameInfoResponse getDefaultInstanceForType() {
        return Gameprotocol.GameInfoResponse.getDefaultInstance();
      }

      public Gameprotocol.GameInfoResponse build() {
        Gameprotocol.GameInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Gameprotocol.GameInfoResponse buildPartial() {
        Gameprotocol.GameInfoResponse result = new Gameprotocol.GameInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.players_ = players_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          board_ = java.util.Collections.unmodifiableList(board_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.board_ = board_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Gameprotocol.GameInfoResponse) {
          return mergeFrom((Gameprotocol.GameInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Gameprotocol.GameInfoResponse other) {
        if (other == Gameprotocol.GameInfoResponse.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.players_.isEmpty()) {
          if (players_.isEmpty()) {
            players_ = other.players_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayersIsMutable();
            players_.addAll(other.players_);
          }
          onChanged();
        }
        if (!other.board_.isEmpty()) {
          if (board_.isEmpty()) {
            board_ = other.board_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBoardIsMutable();
            board_.addAll(other.board_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Gameprotocol.GameInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Gameprotocol.GameInfoResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 players = 2;
      private java.util.List<java.lang.Integer> players_ = java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<java.lang.Integer>(players_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 players = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayersList() {
        return java.util.Collections.unmodifiableList(players_);
      }
      /**
       * <code>repeated int32 players = 2;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated int32 players = 2;</code>
       */
      public int getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <code>repeated int32 players = 2;</code>
       */
      public Builder setPlayers(
          int index, int value) {
        ensurePlayersIsMutable();
        players_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 players = 2;</code>
       */
      public Builder addPlayers(int value) {
        ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayersIsMutable();
        super.addAll(values, players_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 players = 2;</code>
       */
      public Builder clearPlayers() {
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 board = 3;
      private java.util.List<java.lang.Integer> board_ = java.util.Collections.emptyList();
      private void ensureBoardIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          board_ = new java.util.ArrayList<java.lang.Integer>(board_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 board = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getBoardList() {
        return java.util.Collections.unmodifiableList(board_);
      }
      /**
       * <code>repeated int32 board = 3;</code>
       */
      public int getBoardCount() {
        return board_.size();
      }
      /**
       * <code>repeated int32 board = 3;</code>
       */
      public int getBoard(int index) {
        return board_.get(index);
      }
      /**
       * <code>repeated int32 board = 3;</code>
       */
      public Builder setBoard(
          int index, int value) {
        ensureBoardIsMutable();
        board_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 board = 3;</code>
       */
      public Builder addBoard(int value) {
        ensureBoardIsMutable();
        board_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 board = 3;</code>
       */
      public Builder addAllBoard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBoardIsMutable();
        super.addAll(values, board_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 board = 3;</code>
       */
      public Builder clearBoard() {
        board_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameInfoResponse)
    }

    static {
      defaultInstance = new GameInfoResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameInfoResponse)
  }

  public interface CreateGameOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 players = 1;
    /**
     * <code>repeated int32 players = 1;</code>
     */
    java.util.List<java.lang.Integer> getPlayersList();
    /**
     * <code>repeated int32 players = 1;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated int32 players = 1;</code>
     */
    int getPlayers(int index);
  }
  /**
   * Protobuf type {@code CreateGame}
   */
  public static final class CreateGame extends
      com.google.protobuf.GeneratedMessage
      implements CreateGameOrBuilder {
    // Use CreateGame.newBuilder() to construct.
    private CreateGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CreateGame(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CreateGame defaultInstance;
    public static CreateGame getDefaultInstance() {
      return defaultInstance;
    }

    public CreateGame getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CreateGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                players_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              players_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                players_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                players_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Gameprotocol.internal_static_CreateGame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Gameprotocol.internal_static_CreateGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Gameprotocol.CreateGame.class, Gameprotocol.CreateGame.Builder.class);
    }

    public static com.google.protobuf.Parser<CreateGame> PARSER =
        new com.google.protobuf.AbstractParser<CreateGame>() {
      public CreateGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateGame(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CreateGame> getParserForType() {
      return PARSER;
    }

    // repeated int32 players = 1;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> players_;
    /**
     * <code>repeated int32 players = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated int32 players = 1;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated int32 players = 1;</code>
     */
    public int getPlayers(int index) {
      return players_.get(index);
    }

    private void initFields() {
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < players_.size(); i++) {
        output.writeInt32(1, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < players_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(players_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayersList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Gameprotocol.CreateGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.CreateGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.CreateGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.CreateGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.CreateGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.CreateGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Gameprotocol.CreateGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Gameprotocol.CreateGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Gameprotocol.CreateGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.CreateGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Gameprotocol.CreateGame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CreateGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Gameprotocol.CreateGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Gameprotocol.internal_static_CreateGame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Gameprotocol.internal_static_CreateGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Gameprotocol.CreateGame.class, Gameprotocol.CreateGame.Builder.class);
      }

      // Construct using Gameprotocol.CreateGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Gameprotocol.internal_static_CreateGame_descriptor;
      }

      public Gameprotocol.CreateGame getDefaultInstanceForType() {
        return Gameprotocol.CreateGame.getDefaultInstance();
      }

      public Gameprotocol.CreateGame build() {
        Gameprotocol.CreateGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Gameprotocol.CreateGame buildPartial() {
        Gameprotocol.CreateGame result = new Gameprotocol.CreateGame(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = java.util.Collections.unmodifiableList(players_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.players_ = players_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Gameprotocol.CreateGame) {
          return mergeFrom((Gameprotocol.CreateGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Gameprotocol.CreateGame other) {
        if (other == Gameprotocol.CreateGame.getDefaultInstance()) return this;
        if (!other.players_.isEmpty()) {
          if (players_.isEmpty()) {
            players_ = other.players_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePlayersIsMutable();
            players_.addAll(other.players_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Gameprotocol.CreateGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Gameprotocol.CreateGame) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 players = 1;
      private java.util.List<java.lang.Integer> players_ = java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = new java.util.ArrayList<java.lang.Integer>(players_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 players = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayersList() {
        return java.util.Collections.unmodifiableList(players_);
      }
      /**
       * <code>repeated int32 players = 1;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated int32 players = 1;</code>
       */
      public int getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <code>repeated int32 players = 1;</code>
       */
      public Builder setPlayers(
          int index, int value) {
        ensurePlayersIsMutable();
        players_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 players = 1;</code>
       */
      public Builder addPlayers(int value) {
        ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 players = 1;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayersIsMutable();
        super.addAll(values, players_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 players = 1;</code>
       */
      public Builder clearPlayers() {
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CreateGame)
    }

    static {
      defaultInstance = new CreateGame(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CreateGame)
  }

  public interface PlayerMoveOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 gameId = 1;
    /**
     * <code>required int32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>required int32 gameId = 1;</code>
     */
    int getGameId();

    // required int32 playerId = 2;
    /**
     * <code>required int32 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required int32 playerId = 2;</code>
     */
    int getPlayerId();

    // required int32 x = 3;
    /**
     * <code>required int32 x = 3;</code>
     */
    boolean hasX();
    /**
     * <code>required int32 x = 3;</code>
     */
    int getX();

    // required int32 y = 4;
    /**
     * <code>required int32 y = 4;</code>
     */
    boolean hasY();
    /**
     * <code>required int32 y = 4;</code>
     */
    int getY();
  }
  /**
   * Protobuf type {@code PlayerMove}
   */
  public static final class PlayerMove extends
      com.google.protobuf.GeneratedMessage
      implements PlayerMoveOrBuilder {
    // Use PlayerMove.newBuilder() to construct.
    private PlayerMove(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerMove(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerMove defaultInstance;
    public static PlayerMove getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerMove getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerMove(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gameId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              x_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              y_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Gameprotocol.internal_static_PlayerMove_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Gameprotocol.internal_static_PlayerMove_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Gameprotocol.PlayerMove.class, Gameprotocol.PlayerMove.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerMove> PARSER =
        new com.google.protobuf.AbstractParser<PlayerMove>() {
      public PlayerMove parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerMove(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerMove> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 gameId = 1;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>required int32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }

    // required int32 playerId = 2;
    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>required int32 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 playerId = 2;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    // required int32 x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private int x_;
    /**
     * <code>required int32 x = 3;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 x = 3;</code>
     */
    public int getX() {
      return x_;
    }

    // required int32 y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private int y_;
    /**
     * <code>required int32 y = 4;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 y = 4;</code>
     */
    public int getY() {
      return y_;
    }

    private void initFields() {
      gameId_ = 0;
      playerId_ = 0;
      x_ = 0;
      y_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGameId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, y_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Gameprotocol.PlayerMove parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.PlayerMove parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.PlayerMove parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.PlayerMove parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.PlayerMove parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.PlayerMove parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Gameprotocol.PlayerMove parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Gameprotocol.PlayerMove parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Gameprotocol.PlayerMove parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.PlayerMove parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Gameprotocol.PlayerMove prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerMove}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Gameprotocol.PlayerMoveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Gameprotocol.internal_static_PlayerMove_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Gameprotocol.internal_static_PlayerMove_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Gameprotocol.PlayerMove.class, Gameprotocol.PlayerMove.Builder.class);
      }

      // Construct using Gameprotocol.PlayerMove.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Gameprotocol.internal_static_PlayerMove_descriptor;
      }

      public Gameprotocol.PlayerMove getDefaultInstanceForType() {
        return Gameprotocol.PlayerMove.getDefaultInstance();
      }

      public Gameprotocol.PlayerMove build() {
        Gameprotocol.PlayerMove result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Gameprotocol.PlayerMove buildPartial() {
        Gameprotocol.PlayerMove result = new Gameprotocol.PlayerMove(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gameId_ = gameId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Gameprotocol.PlayerMove) {
          return mergeFrom((Gameprotocol.PlayerMove)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Gameprotocol.PlayerMove other) {
        if (other == Gameprotocol.PlayerMove.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGameId()) {
          
          return false;
        }
        if (!hasPlayerId()) {
          
          return false;
        }
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Gameprotocol.PlayerMove parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Gameprotocol.PlayerMove) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 gameId = 1;
      private int gameId_ ;
      /**
       * <code>required int32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 gameId = 1;</code>
       */
      public int getGameId() {
        return gameId_;
      }
      /**
       * <code>required int32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        bitField0_ |= 0x00000001;
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gameId_ = 0;
        onChanged();
        return this;
      }

      // required int32 playerId = 2;
      private int playerId_ ;
      /**
       * <code>required int32 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 playerId = 2;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required int32 playerId = 2;</code>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // required int32 x = 3;
      private int x_ ;
      /**
       * <code>required int32 x = 3;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 x = 3;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>required int32 x = 3;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000004;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 x = 3;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        x_ = 0;
        onChanged();
        return this;
      }

      // required int32 y = 4;
      private int y_ ;
      /**
       * <code>required int32 y = 4;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 y = 4;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>required int32 y = 4;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000008;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 y = 4;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerMove)
    }

    static {
      defaultInstance = new PlayerMove(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerMove)
  }

  public interface GameErrorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string description = 1;
    /**
     * <code>required string description = 1;</code>
     */
    boolean hasDescription();
    /**
     * <code>required string description = 1;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>required string description = 1;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    // optional .GameInfoResponse gameinforeply = 2;
    /**
     * <code>optional .GameInfoResponse gameinforeply = 2;</code>
     */
    boolean hasGameinforeply();
    /**
     * <code>optional .GameInfoResponse gameinforeply = 2;</code>
     */
    Gameprotocol.GameInfoResponse getGameinforeply();
    /**
     * <code>optional .GameInfoResponse gameinforeply = 2;</code>
     */
    Gameprotocol.GameInfoResponseOrBuilder getGameinforeplyOrBuilder();
  }
  /**
   * Protobuf type {@code GameError}
   */
  public static final class GameError extends
      com.google.protobuf.GeneratedMessage
      implements GameErrorOrBuilder {
    // Use GameError.newBuilder() to construct.
    private GameError(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameError(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameError defaultInstance;
    public static GameError getDefaultInstance() {
      return defaultInstance;
    }

    public GameError getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameError(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              description_ = input.readBytes();
              break;
            }
            case 18: {
              Gameprotocol.GameInfoResponse.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = gameinforeply_.toBuilder();
              }
              gameinforeply_ = input.readMessage(Gameprotocol.GameInfoResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gameinforeply_);
                gameinforeply_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Gameprotocol.internal_static_GameError_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Gameprotocol.internal_static_GameError_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Gameprotocol.GameError.class, Gameprotocol.GameError.Builder.class);
    }

    public static com.google.protobuf.Parser<GameError> PARSER =
        new com.google.protobuf.AbstractParser<GameError>() {
      public GameError parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameError(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameError> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string description = 1;
    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    private java.lang.Object description_;
    /**
     * <code>required string description = 1;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string description = 1;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string description = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .GameInfoResponse gameinforeply = 2;
    public static final int GAMEINFOREPLY_FIELD_NUMBER = 2;
    private Gameprotocol.GameInfoResponse gameinforeply_;
    /**
     * <code>optional .GameInfoResponse gameinforeply = 2;</code>
     */
    public boolean hasGameinforeply() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .GameInfoResponse gameinforeply = 2;</code>
     */
    public Gameprotocol.GameInfoResponse getGameinforeply() {
      return gameinforeply_;
    }
    /**
     * <code>optional .GameInfoResponse gameinforeply = 2;</code>
     */
    public Gameprotocol.GameInfoResponseOrBuilder getGameinforeplyOrBuilder() {
      return gameinforeply_;
    }

    private void initFields() {
      description_ = "";
      gameinforeply_ = Gameprotocol.GameInfoResponse.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasGameinforeply()) {
        if (!getGameinforeply().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, gameinforeply_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, gameinforeply_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Gameprotocol.GameError parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.GameError parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.GameError parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Gameprotocol.GameError parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Gameprotocol.GameError parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.GameError parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Gameprotocol.GameError parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Gameprotocol.GameError parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Gameprotocol.GameError parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Gameprotocol.GameError parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Gameprotocol.GameError prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameError}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Gameprotocol.GameErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Gameprotocol.internal_static_GameError_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Gameprotocol.internal_static_GameError_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Gameprotocol.GameError.class, Gameprotocol.GameError.Builder.class);
      }

      // Construct using Gameprotocol.GameError.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGameinforeplyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (gameinforeplyBuilder_ == null) {
          gameinforeply_ = Gameprotocol.GameInfoResponse.getDefaultInstance();
        } else {
          gameinforeplyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Gameprotocol.internal_static_GameError_descriptor;
      }

      public Gameprotocol.GameError getDefaultInstanceForType() {
        return Gameprotocol.GameError.getDefaultInstance();
      }

      public Gameprotocol.GameError build() {
        Gameprotocol.GameError result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Gameprotocol.GameError buildPartial() {
        Gameprotocol.GameError result = new Gameprotocol.GameError(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (gameinforeplyBuilder_ == null) {
          result.gameinforeply_ = gameinforeply_;
        } else {
          result.gameinforeply_ = gameinforeplyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Gameprotocol.GameError) {
          return mergeFrom((Gameprotocol.GameError)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Gameprotocol.GameError other) {
        if (other == Gameprotocol.GameError.getDefaultInstance()) return this;
        if (other.hasDescription()) {
          bitField0_ |= 0x00000001;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasGameinforeply()) {
          mergeGameinforeply(other.getGameinforeply());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDescription()) {
          
          return false;
        }
        if (hasGameinforeply()) {
          if (!getGameinforeply().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Gameprotocol.GameError parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Gameprotocol.GameError) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string description = 1;
      private java.lang.Object description_ = "";
      /**
       * <code>required string description = 1;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string description = 1;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string description = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string description = 1;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string description = 1;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>required string description = 1;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        description_ = value;
        onChanged();
        return this;
      }

      // optional .GameInfoResponse gameinforeply = 2;
      private Gameprotocol.GameInfoResponse gameinforeply_ = Gameprotocol.GameInfoResponse.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Gameprotocol.GameInfoResponse, Gameprotocol.GameInfoResponse.Builder, Gameprotocol.GameInfoResponseOrBuilder> gameinforeplyBuilder_;
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      public boolean hasGameinforeply() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      public Gameprotocol.GameInfoResponse getGameinforeply() {
        if (gameinforeplyBuilder_ == null) {
          return gameinforeply_;
        } else {
          return gameinforeplyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      public Builder setGameinforeply(Gameprotocol.GameInfoResponse value) {
        if (gameinforeplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gameinforeply_ = value;
          onChanged();
        } else {
          gameinforeplyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      public Builder setGameinforeply(
          Gameprotocol.GameInfoResponse.Builder builderForValue) {
        if (gameinforeplyBuilder_ == null) {
          gameinforeply_ = builderForValue.build();
          onChanged();
        } else {
          gameinforeplyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      public Builder mergeGameinforeply(Gameprotocol.GameInfoResponse value) {
        if (gameinforeplyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              gameinforeply_ != Gameprotocol.GameInfoResponse.getDefaultInstance()) {
            gameinforeply_ =
              Gameprotocol.GameInfoResponse.newBuilder(gameinforeply_).mergeFrom(value).buildPartial();
          } else {
            gameinforeply_ = value;
          }
          onChanged();
        } else {
          gameinforeplyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      public Builder clearGameinforeply() {
        if (gameinforeplyBuilder_ == null) {
          gameinforeply_ = Gameprotocol.GameInfoResponse.getDefaultInstance();
          onChanged();
        } else {
          gameinforeplyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      public Gameprotocol.GameInfoResponse.Builder getGameinforeplyBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGameinforeplyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      public Gameprotocol.GameInfoResponseOrBuilder getGameinforeplyOrBuilder() {
        if (gameinforeplyBuilder_ != null) {
          return gameinforeplyBuilder_.getMessageOrBuilder();
        } else {
          return gameinforeply_;
        }
      }
      /**
       * <code>optional .GameInfoResponse gameinforeply = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Gameprotocol.GameInfoResponse, Gameprotocol.GameInfoResponse.Builder, Gameprotocol.GameInfoResponseOrBuilder> 
          getGameinforeplyFieldBuilder() {
        if (gameinforeplyBuilder_ == null) {
          gameinforeplyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Gameprotocol.GameInfoResponse, Gameprotocol.GameInfoResponse.Builder, Gameprotocol.GameInfoResponseOrBuilder>(
                  gameinforeply_,
                  getParentForChildren(),
                  isClean());
          gameinforeply_ = null;
        }
        return gameinforeplyBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GameError)
    }

    static {
      defaultInstance = new GameError(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameError)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameInfoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameInfoRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameInfoResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CreateGame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CreateGame_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerMove_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerMove_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameError_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameError_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013games.proto\"\035\n\017GameInfoRequest\022\n\n\002id\030\001" +
      " \002(\005\">\n\020GameInfoResponse\022\n\n\002id\030\001 \002(\005\022\017\n\007" +
      "players\030\002 \003(\005\022\r\n\005board\030\003 \003(\005\"\035\n\nCreateGa" +
      "me\022\017\n\007players\030\001 \003(\005\"D\n\nPlayerMove\022\016\n\006gam" +
      "eId\030\001 \002(\005\022\020\n\010playerId\030\002 \002(\005\022\t\n\001x\030\003 \002(\005\022\t" +
      "\n\001y\030\004 \002(\005\"J\n\tGameError\022\023\n\013description\030\001 " +
      "\002(\t\022(\n\rgameinforeply\030\002 \001(\0132\021.GameInfoRes" +
      "ponseB\016B\014Gameprotocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_GameInfoRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_GameInfoRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameInfoRequest_descriptor,
              new java.lang.String[] { "Id", });
          internal_static_GameInfoResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_GameInfoResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameInfoResponse_descriptor,
              new java.lang.String[] { "Id", "Players", "Board", });
          internal_static_CreateGame_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_CreateGame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CreateGame_descriptor,
              new java.lang.String[] { "Players", });
          internal_static_PlayerMove_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_PlayerMove_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlayerMove_descriptor,
              new java.lang.String[] { "GameId", "PlayerId", "X", "Y", });
          internal_static_GameError_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_GameError_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameError_descriptor,
              new java.lang.String[] { "Description", "Gameinforeply", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
